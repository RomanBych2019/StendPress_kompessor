#include         <SoftwareSerial.h>                   //  Подключаем библиотеку для работы по программной шине UART
#include         <Adafruit_Thermal.h>                 //  Подключаем библиотеку для работы с принтером
SoftwareSerial   mySerial(5, 6);                      //  Объявляем объект библиотеки SoftwareSerial, указывая задействованные выводы Arduino (RX=5-зелёный, TX=6-синий). Можно назначить другие выводы Arduino
Adafruit_Thermal printer(&mySerial);                  //  Объявляем объект библиотеки Adafruit_Thermal, указывая ссылку на созданный ранее объект mySerial библиотеки SoftwareSerial
static const uint8_t PROGMEM logo[]={                 //  Определяем массив хранящий данные выводимого изображения
    0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,          //  Высота изображения может быть любой, а количество пикселей по ширине должно быть кратно 8
    0xFF,0xF8,0x1F,0xFF,0xFF,0xFB,0xDF,0xFF,          //  Каждый бит каждого байта массива это очередной пиксель изображения (0-белый, 1-чёрный)
    0xFF,0xFB,0xDF,0xFF,0xE0,0x03,0xC0,0x07,          //  В данном случае мы будем выводить небольшое изображение размером 32x20 пикселей (32 по ширине, 20 по высоте). Это логотип iarduino.
    0xE0,0x00,0x00,0x07,0xE0,0x00,0x00,0x07,          //  Количество пикселей в данном изображении = 32 * 20 = 640. Каждый пиксель это бит, в одном байте 8 бит, значит в массиве должно быть 80 байт ( 640 / 8 ).
    0xE0,0x00,0x00,0x07,0x00,0x00,0x00,0x00,          //  Изображение формируется построчно слева направо, сверху вниз
    0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x07,          //  Пиксели выводятся в строку начиная со старшего бита первого байта настоящего массива
    0xE0,0x00,0x00,0x07,0xE0,0x00,0x00,0x07,          //  После того как в одну строку будет веведено количество бит (пикселей) равное ширине изображения (в данном случае 32), то принтер перейдёт к выводу следующей строки изображения
    0xE1,0xE0,0x07,0x87,0xFD,0xEE,0x77,0xBF,          //  Изображение будет выводиться пока количество выведенных строк не достигнет значения высоты изображения (в данном случае 20)
    0xFD,0xEE,0x77,0xBF,0xFC,0x0E,0x70,0x3F,          //  Определение массивов для больших изображений снижает удобочитаемость скетча, по этому их можно вынести в отдельный подключаемый файл
    0xFF,0xFE,0x7F,0xFF,0xFF,0xFE,0x7F,0xFF};         //  Попробуйте сохранить определение данного массива в файл «iarduino_logo.h», файл должен находиться в той же папке что и скетч, а в скетч, вместо определения массива, вставьте строку: #include "logo_iarduino.h" без кавычек в конце строки
                                                      //
void setup(){                                         //  Код функции setup выполняется только 1 раз, при старте скетча
    mySerial.begin(9600);                             //  Инициируем передачу данных по программной шине UART на скорости 9600. Функцию begin объекта mySerial нужно вызвать до вызова функции begin объекта printer!
    printer.begin();                                  //  Инициируем работу с термопринтером. В качестве параметра можно указать время нагрева пикселей от 3 (0,03 мс) до 255 (2,55 мс), чем выше тем темнее пикселы. Значение по умолчанию = 120 (1,20 мс)
    printer.printBitmap(32, 20, logo);                //  Печать изображения (логотипа iarduino) размером 32x20 пикселей из массива logo
    printer.feed(3);                                  //  Прокручиваем ленту на 3 строки
}                                                     //
                                                      //  Если напечатанные изображения слишком светлые, то перед функцией printer.printBitmap(...) вызовите функцию printer.begin(255) - греть пикселы 2.55 мс
void loop(){}                                         //  А после функции printer.printBitmap(...) опять вызовите printer.begin() но уже без параметра - греть пикселы по умолчанию.
